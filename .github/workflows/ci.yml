name: Java CI + Agentic DevOps

on:
  push:
    branches: ['**']
    tags: ['v*']
  pull_request:
    branches: ['**']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: '11'

      # 1️⃣  install Python + agent deps
      - name: Install Python & Agent Deps
        run: |
          python -m pip install --upgrade pip
          pip install openai dspy requests pyyaml

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 2️⃣  Run PR-stage agents
      - name: Run Pre-Config & PR Reviewer Agents
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python agents/preconfig_gate.py
          python agents/pr_reviewer.py

      # 3️⃣  Build/Test
      - name: Build & Test with Gradle
        id: gradle
        run: ./gradlew clean test | tee build.log

      # 4️⃣  RCA on failure
      - name: Run Pipeline RCA Agent
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: python agents/pipeline_rca.py

      # 5️⃣  Security scan on success
      - name: Build Docker Image
        if: success()
        run: docker build -t springboot-agentic:latest .

      - name: Run Trivy Scan
        if: success()
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: springboot-agentic:latest
          format: json
          output: trivy-report.json

      - name: Run Security Watcher Agent
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: python agents/security_watcher.py

      - name: Summary
        if: always()
        run: echo "✅ Agentic DevOps pipeline finished."
